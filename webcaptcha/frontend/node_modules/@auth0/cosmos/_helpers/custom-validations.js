"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var onlyOneOf = function (props, list) {
    var matches = [];
    list.forEach(function (item) {
        if (props[item]) {
            matches.push(item);
        }
    });
    if (matches.length > 1) {
        return new Error("Can not use " + matches.join(' + ') + " together!");
    }
};
exports.onlyOneOf = onlyOneOf;
var sumOfElements = function (elements, expectedSum) {
    if (!elements) {
        return undefined;
    }
    var sum = elements.reduce(function (a, b) { return a + b; }, 0);
    if (sum !== expectedSum) {
        return new Error("The sum of values should be " + expectedSum + "!");
    }
};
exports.sumOfElements = sumOfElements;
var numberOfValues = function (elements, expectedCount) {
    if (!elements) {
        return undefined;
    }
    if (elements.length !== expectedCount) {
        return new Error("Expected " + expectedCount + " values, found " + elements.length + "!");
    }
};
exports.numberOfValues = numberOfValues;
var deprecate = function (props, _a) {
    var name = _a.name, oldAPI = _a.oldAPI, replacement = _a.replacement;
    var message = "Hi \uD83D\uDC4B, '" + (oldAPI || name) + "' prop will be deprecated in 1.0.0";
    if (replacement) {
        message += " You might want to use '" + replacement + "' instead.";
    }
    if (props[name]) {
        return new Error(message);
    }
};
exports.deprecate = deprecate;
//# sourceMappingURL=custom-validations.js.map