"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(require("react"));
var automation_attribute_1 = __importDefault(require("./automation-attribute"));
var layout_margin_reset_1 = require("./layout-margin-reset");
var transformChildren = function (props, ChildWrapperElement, automationAttributeName) {
    var transformChild = function (child, index) {
        if (index === void 0) { index = null; }
        if (!child) {
            return null;
        }
        return (React.createElement(ChildWrapperElement, __assign({ className: layout_margin_reset_1.LAYOUT_CHILDREN_CLASS_NAME, key: index }, automation_attribute_1.default(automationAttributeName)), child));
    };
    if (props.children.constructor.name === 'Array') {
        return props.children.map(transformChild);
    }
    return transformChild(props.children);
};
exports.default = transformChildren;
//# sourceMappingURL=transform-layout-children.js.map