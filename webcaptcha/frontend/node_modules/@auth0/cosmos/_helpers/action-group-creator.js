"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(require("react"));
var button_1 = __importDefault(require("../atoms/button"));
var button_group_1 = __importDefault(require("../molecules/button-group"));
var getActionGroup = function (actions, actionOverrides) {
    if (actions === void 0) { actions = []; }
    if (actionOverrides === void 0) { actionOverrides = {}; }
    if (React.isValidElement(actions[0])) {
        return (React.createElement(button_group_1.default, { compressed: true }, actions.map(function (action, index) {
            if (!action) {
                return null;
            }
            return React.cloneElement(action, __assign({ key: index }, actionOverrides));
        })));
    }
    else {
        return (React.createElement(button_group_1.default, { compressed: true }, actions.map(function (action, index) {
            return React.createElement(button_1.default, __assign({ key: index, onClick: action.handler }, action, actionOverrides));
        })));
    }
};
exports.default = getActionGroup;
//# sourceMappingURL=action-group-creator.js.map