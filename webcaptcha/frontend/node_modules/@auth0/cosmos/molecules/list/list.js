"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var array_move_1 = __importDefault(require("array-move"));
var React = __importStar(require("react"));
var react_sortable_hoc_1 = require("react-sortable-hoc");
var automation_attribute_1 = __importDefault(require("../../_helpers/automation-attribute"));
var container_styles_1 = __importDefault(require("../../_helpers/container-styles"));
var list_1 = require("../../_helpers/list");
var heading_1 = __importStar(require("../../atoms/heading"));
var icon_1 = __importDefault(require("../../atoms/icon"));
var styled_1 = __importDefault(require("../../styled"));
var tokens_1 = require("../../tokens");
exports.Div = function (props) { return React.createElement("div", __assign({}, props)); };
var ListContainer = react_sortable_hoc_1.SortableContainer(function (props) { return (React.createElement("div", null, React.Children.map(props.children, renderItem(props, SortableListItemContainer)))); });
var SortableListItemContainer = react_sortable_hoc_1.SortableElement(function (props) { return React.cloneElement(props.children, { sortIndex: props.index, value: props.value }); });
var renderItem = function (props, wrapperElement) {
    if (wrapperElement === void 0) { wrapperElement = exports.Div; }
    return function (child, index) {
        var ItemWrapper = wrapperElement;
        var itemWrapperProps = ItemWrapper === exports.Div ? {} : { index: index, value: index };
        return (React.createElement(ItemWrapper, __assign({ key: "item-" + index }, itemWrapperProps),
            React.createElement(List.ItemContainer, __assign({}, automation_attribute_1.default("list.item"), { draggable: props.draggable, onClick: list_1.onItemClickHandler(props, child) }), function (drawerIsOpen, setDrawerState) {
                var drawer = list_1.getDrawer(child, drawerIsOpen, List.Drawer);
                var _a = __read(list_1.isListExpandable(child, List.Drawer), 2), listIsExpandable = _a[0], arrowIsVisible = _a[1];
                var rawListContent = list_1.excludeDrawer(child, List.Drawer);
                var listContent = rawListContent
                    ? React.cloneElement(rawListContent, {
                        arrowIsVisible: arrowIsVisible
                    })
                    : null;
                return (React.createElement(React.Fragment, null,
                    props.draggable && (React.createElement(List.Handle, { "aria-expanded": drawerIsOpen ? "true" : "false" },
                        React.createElement(icon_1.default, { name: "resize-vertical", size: "16", color: "blue" }))),
                    listContent,
                    listIsExpandable &&
                        arrowIsVisible && (React.createElement(List.Arrow, { onClick: function () { return setDrawerState(!drawerIsOpen); } },
                        React.createElement(icon_1.default, { name: drawerIsOpen ? "chevron-up" : "chevron-down", size: "16", color: "default" }))),
                    drawer));
            })));
    };
};
var List = function (props) { return (React.createElement(List.Element, __assign({}, props, automation_attribute_1.default("list"), { role: "list" }),
    props.label && (React.createElement(List.Label, null,
        React.createElement(heading_1.default, { size: 4 }, props.label))),
    props.draggable ? (React.createElement(ListContainer, __assign({ axis: "y", useDragHandle: true, onSortEnd: props.onDragEnd }, props))) : (React.Children.map(props.children, renderItem(props))))); };
List.Element = styled_1.default.ul(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  ", ";\n"], ["\n  ", ";\n"])), container_styles_1.default);
var ListItemContainer = (function (_super) {
    __extends(ListItemContainer, _super);
    function ListItemContainer() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = { open: false };
        _this.setDrawerState = function (open) {
            _this.setState({ open: open });
        };
        return _this;
    }
    ListItemContainer.prototype.render = function () {
        return (React.createElement(List.ItemContainer.Element, __assign({}, this.props, { hasOpenDrawer: this.state.open }), this.props.children(this.state.open, this.setDrawerState)));
    };
    ListItemContainer.Element = styled_1.default.li(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n    border-top: 1px solid ", ";\n    padding-left: ", ";\n    padding-right: ", ";\n    padding-top: ", ";\n    padding-bottom: ", ";\n    display: flex;\n    flex-wrap: wrap;\n    align-items: stretch;\n    justify-content: space-between;\n    background-color: ", ";\n\n    &:hover {\n      background-color: ", ";\n    }\n  "], ["\n    border-top: 1px solid ", ";\n    padding-left: ", ";\n    padding-right: ", ";\n    padding-top: ", ";\n    padding-bottom: ", ";\n    display: flex;\n    flex-wrap: wrap;\n    align-items: stretch;\n    justify-content: space-between;\n    background-color: ", ";\n\n    &:hover {\n      background-color: ", ";\n    }\n  "])), tokens_1.colors.list.borderColor, tokens_1.spacing.xsmall, tokens_1.spacing.xsmall, tokens_1.spacing.small, tokens_1.spacing.small, function (props) { return (props.hasOpenDrawer ? tokens_1.colors.list.backgroundHover : "transparent"); }, tokens_1.colors.list.backgroundHover);
    return ListItemContainer;
}(React.Component));
List.ItemContainer = ListItemContainer;
List.Item = styled_1.default.div(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n  flex: 1;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  word-break: break-word;\n  margin-right: ", ";\n\n  > *:not(:last-child) {\n    margin-right: ", ";\n  }\n\n  /* if it has only one item inside we want it to fill all the avaliable space */\n  > * {\n    flex: 1;\n  }\n"], ["\n  flex: 1;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  word-break: break-word;\n  margin-right: ", ";\n\n  > *:not(:last-child) {\n    margin-right: ", ";\n  }\n\n  /* if it has only one item inside we want it to fill all the avaliable space */\n  > * {\n    flex: 1;\n  }\n"])), function (props) { return (props.arrowIsVisible ? "0" : "32px"); }, tokens_1.spacing.medium);
List.Header = styled_1.default.div(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n  flex: 1;\n  /* white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis; */\n"], ["\n  flex: 1;\n  /* white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis; */\n"])));
List.Body = styled_1.default.div(templateObject_5 || (templateObject_5 = __makeTemplateObject(["\n  flex: 1.4;\n  /* This is not mobile first, but it avoids negation of margin */\n  @media screen and (max-width: 768px) {\n    flex: 1 0 100%;\n    order: 1;\n    margin-top: ", ";\n  }\n"], ["\n  flex: 1.4;\n  /* This is not mobile first, but it avoids negation of margin */\n  @media screen and (max-width: 768px) {\n    flex: 1 0 100%;\n    order: 1;\n    margin-top: ", ";\n  }\n"])), tokens_1.spacing.small);
List.Footer = styled_1.default.div(templateObject_6 || (templateObject_6 = __makeTemplateObject(["\n  flex: none;\n"], ["\n  flex: none;\n"])));
List.Handle = react_sortable_hoc_1.SortableHandle(styled_1.default.button(templateObject_7 || (templateObject_7 = __makeTemplateObject(["\n  cursor: move;\n  border: none;\n  padding: 0;\n  background-color: transparent;\n  margin-top: -", ";\n  margin-bottom: -", ";\n  margin-left: -", ";\n  padding-left: ", ";\n  padding-right: ", ";\n"], ["\n  cursor: move;\n  border: none;\n  padding: 0;\n  background-color: transparent;\n  margin-top: -", ";\n  margin-bottom: -", ";\n  margin-left: -", ";\n  padding-left: ", ";\n  padding-right: ", ";\n"])), tokens_1.spacing.small, tokens_1.spacing.small, tokens_1.spacing.xsmall, tokens_1.spacing.xsmall, tokens_1.spacing.small));
List.Arrow = styled_1.default.button(templateObject_8 || (templateObject_8 = __makeTemplateObject(["\n  cursor: pointer;\n  border: none;\n  padding: 0;\n  background-color: transparent;\n  margin-top: -", ";\n  margin-bottom: -", ";\n  margin-right: -", ";\n  padding-left: ", ";\n  padding-right: ", ";\n"], ["\n  cursor: pointer;\n  border: none;\n  padding: 0;\n  background-color: transparent;\n  margin-top: -", ";\n  margin-bottom: -", ";\n  margin-right: -", ";\n  padding-left: ", ";\n  padding-right: ", ";\n"])), tokens_1.spacing.small, tokens_1.spacing.small, tokens_1.spacing.xsmall, tokens_1.spacing.small, tokens_1.spacing.xsmall);
List.Drawer = styled_1.default.section(templateObject_9 || (templateObject_9 = __makeTemplateObject(["\n  flex: 1 0 100%;\n  border-top: 1px solid ", ";\n  display: ", ";\n\n  margin-top: ", ";\n  margin-bottom: -", ";\n  margin-left: -", ";\n  margin-right: -", ";\n  padding-left: ", ";\n  padding-right: ", ";\n  padding-top: ", ";\n  padding-bottom: ", ";\n"], ["\n  flex: 1 0 100%;\n  border-top: 1px solid ", ";\n  display: ", ";\n\n  margin-top: ", ";\n  margin-bottom: -", ";\n  margin-left: -", ";\n  margin-right: -", ";\n  padding-left: ", ";\n  padding-right: ", ";\n  padding-top: ", ";\n  padding-bottom: ", ";\n"])), tokens_1.colors.list.borderColor, function (props) { return (props.hidden ? "none" : "block"); }, tokens_1.spacing.small, tokens_1.spacing.small, tokens_1.spacing.small, tokens_1.spacing.small, tokens_1.spacing.small, tokens_1.spacing.small, tokens_1.spacing.small, tokens_1.spacing.small);
List.Label = styled_1.default.div(templateObject_10 || (templateObject_10 = __makeTemplateObject(["\n  padding: ", ";\n\n  ", " {\n    margin: 0;\n  }\n"], ["\n  padding: ", ";\n\n  ", " {\n    margin: 0;\n  }\n"])), tokens_1.spacing.xsmall, heading_1.StyledHeading[4]);
List.arrayMove = array_move_1.default;
List.defaultProps = {};
exports.default = List;
var templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6, templateObject_7, templateObject_8, templateObject_9, templateObject_10;
//# sourceMappingURL=list.js.map