"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(require("react"));
var styled_1 = __importDefault(require("../../styled"));
var tokens_1 = require("../../tokens");
var automation_attribute_1 = __importDefault(require("../../_helpers/automation-attribute"));
var TableHeader = function (props) {
    var cells = props.columns.map(function (column, index) {
        var isSortedBy = column.field === props.sortingColumn.field;
        var order = props.sortDirection || 'asc';
        var icon = order === 'asc' ? '↑' : '↓';
        var sortIndicator;
        if (column.sortable) {
            sortIndicator = (React.createElement(TableHeader.SortIndicator, { isSortedBy: isSortedBy }, icon));
        }
        var onClick = function (column) {
            if (!column.sortable) {
                return;
            }
            var sortDirection;
            if (column.field === props.sortingColumn.field) {
                sortDirection = props.sortDirection === 'asc' ? 'desc' : 'asc';
            }
            else {
                sortDirection = 'asc';
            }
            props.onSort(column.field, sortDirection);
        };
        return (React.createElement(TableHeader.Cell, { key: "row-header-" + index, column: column, sortable: column.sortable && props.onSort, onClick: function (_) { return onClick(column); }, width: column.width },
            column.title,
            sortIndicator));
    });
    return (React.createElement(TableHeader.Element, __assign({}, automation_attribute_1.default('table.header')),
        React.createElement(TableHeader.Row, null, cells)));
};
TableHeader.Element = styled_1.default.thead(templateObject_1 || (templateObject_1 = __makeTemplateObject([""], [""])));
TableHeader.Row = styled_1.default.tr(templateObject_2 || (templateObject_2 = __makeTemplateObject([""], [""])));
TableHeader.SortIndicator = styled_1.default.span(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n  padding-left: ", ";\n  visibility: ", ";\n"], ["\n  padding-left: ", ";\n  visibility: ", ";\n"])), tokens_1.spacing.xsmall, function (props) { return (props.isSortedBy ? 'visible' : 'hidden'); });
TableHeader.Cell = styled_1.default.th(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n  padding: ", ";\n  border-bottom: 2px solid ", ";\n  text-align: left;\n  vertical-align: bottom;\n  ", "\n  cursor: ", ";\n  &:hover {\n    color: ", ";\n    ", " {\n      visibility: visible;\n    }\n  }\n"], ["\n  padding: ", ";\n  border-bottom: 2px solid ", ";\n  text-align: left;\n  vertical-align: bottom;\n  ", "\n  cursor: ", ";\n  &:hover {\n    color: ", ";\n    ", " {\n      visibility: visible;\n    }\n  }\n"])), tokens_1.spacing.xsmall, tokens_1.colors.base.grayLight, function (props) { return (props.width ? "width: " + props.width + ";" : ''); }, function (props) { return (props.sortable ? 'pointer' : 'auto'); }, function (props) { return (props.sortable ? tokens_1.colors.link.default : 'inherit'); }, TableHeader.SortIndicator);
TableHeader.defaultProps = {
    onSort: function (column) { return function (event) { return null; }; }
};
exports.default = TableHeader;
var templateObject_1, templateObject_2, templateObject_3, templateObject_4;
//# sourceMappingURL=table-header.js.map