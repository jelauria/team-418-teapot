"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(require("react"));
var react_sortable_hoc_1 = require("react-sortable-hoc");
var __1 = require("../../");
var button_1 = __importDefault(require("../../atoms/button"));
var styled_1 = __importDefault(require("../../styled"));
var tokens_1 = require("../../tokens");
var noop = function () { };
var notifyFocusStatusChange = function (props, onFocus, ev) {
    return props && props.onFocusStatusChange && props.onFocusStatusChange({ onFocus: onFocus }, ev);
};
var SortableListHandle = react_sortable_hoc_1.SortableHandle(function (_a) {
    var _b = (_a === void 0 ? {} : _a).onFocusStatusChange, onFocusStatusChange = _b === void 0 ? noop : _b;
    return (React.createElement(exports.SortableListHandleElement, null,
        React.createElement(__1.Tooltip, { content: "Re-order" },
            React.createElement(exports.SortableListHandleButton, { onFocusStatusChange: onFocusStatusChange, appearance: "link", icon: "resize-vertical" }))));
});
exports.SortableListHandleElement = styled_1.default.div(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  margin-right: ", ";\n"], ["\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  margin-right: ", ";\n"])), tokens_1.spacing.xsmall);
exports.SortableListHandleButton = function (props) { return (React.createElement(exports.SortableListHandleButton.Element, __assign({ onFocus: function (ev) { return notifyFocusStatusChange(props, true, ev); }, onBlur: function (ev) { return notifyFocusStatusChange(props, false, ev); } }, props))); };
exports.SortableListHandleButton.Element = styled_1.default(button_1.default)(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  padding-left: ", ";\n  padding-right: ", ";\n  min-width: 0;\n\n  &:focus {\n    background-color: ", ";\n  }\n"], ["\n  padding-left: ", ";\n  padding-right: ", ";\n  min-width: 0;\n\n  &:focus {\n    background-color: ", ";\n  }\n"])), tokens_1.spacing.xxsmall, tokens_1.spacing.xxsmall, tokens_1.colors.base.grayLightest);
exports.default = SortableListHandle;
var templateObject_1, templateObject_2;
//# sourceMappingURL=sortable-handle.js.map