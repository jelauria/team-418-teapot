"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(require("react"));
var react_1 = require("@storybook/react");
var story_helpers_1 = require("../../../../_helpers/story-helpers");
var __1 = require("../../../../");
react_1.storiesOf('Form', module).add('text field', function () { return (React.createElement(story_helpers_1.Example, { title: "text field" },
    React.createElement(__1.Form, null,
        React.createElement(__1.Form.Field, { label: "Field label" },
            React.createElement(__1.TextInput, { type: "text", placeholder: "Enter something" }))))); });
react_1.storiesOf('Form', module).add('text field + error', function () { return (React.createElement(story_helpers_1.Example, { title: "text field + error" },
    React.createElement(__1.Form, null,
        React.createElement(__1.Form.Field, { label: "Field label", error: "Everything is broken" },
            React.createElement(__1.TextInput, { type: "text", placeholder: "Enter something", hasError: true }))))); });
var textInputForSize = function (size) { return (React.createElement(__1.Form.Field, { label: "Field label" },
    React.createElement(__1.TextInput, { type: "text", size: size, placeholder: "Enter something", actions: [
            React.createElement(__1.Button, { icon: "copy", onClick: function (e) { return console.log(e); } }),
            React.createElement(__1.Button, { icon: "delete", onClick: function (e) { return console.log(e); } })
        ] }))); };
react_1.storiesOf('Form', module).add('text field + actions', function () { return (React.createElement(story_helpers_1.Example, { title: "text field + actions" },
    React.createElement(__1.Form, null,
        textInputForSize('default'),
        textInputForSize('large'),
        textInputForSize('small'),
        textInputForSize('compressed')))); });
react_1.storiesOf('Form', module).add('text field - old API', function () { return (React.createElement(story_helpers_1.Example, { title: "old API" },
    React.createElement(__1.Form, null,
        React.createElement(__1.Form.TextInput, { label: "Field label", error: "Everything is broken", type: "text", placeholder: "Enter something", actions: [
                { icon: 'copy', handler: function () { }, label: 'Copy to clipboard' },
                { icon: 'delete', handler: function () { }, label: 'Delete' }
            ] })))); });
//# sourceMappingURL=text-field.story.js.map