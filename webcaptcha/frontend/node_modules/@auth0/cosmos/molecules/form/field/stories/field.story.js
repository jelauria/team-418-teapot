"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(require("react"));
var react_1 = require("@storybook/react");
var story_helpers_1 = require("../../../../_helpers/story-helpers");
var __1 = require("../../../../");
react_1.storiesOf("Form", module).add("form field", function () { return (React.createElement(story_helpers_1.Example, { title: "form field" },
    React.createElement(__1.Form.Field, { label: "Field title" },
        React.createElement(__1.TextInput, { type: "text", placeholder: "Enter something" })))); });
react_1.storiesOf("Form", module).add("form field + help text", function () { return (React.createElement(story_helpers_1.Example, { title: "form field + help text" },
    React.createElement(__1.Form.Field, { label: "Field title", helpText: "The help text for the field provide the user with instructions of how to correctly fill this field." },
        React.createElement(__1.TextInput, { type: "text", placeholder: "Enter something" })))); });
react_1.storiesOf("Form", module).add("form field + required prop", function () { return (React.createElement(story_helpers_1.Example, { title: "form field + required prop" },
    React.createElement(__1.Form.Field, { label: "Callback URL", required: true },
        React.createElement(__1.TextInput, { type: "text", placeholder: "Enter something" })))); });
react_1.storiesOf("Form", module).add("form field + rich help text", function () { return (React.createElement(story_helpers_1.Example, { title: "form field + rich help text" },
    React.createElement(__1.Form.Field, { label: "Field title", helpText: React.createElement(React.Fragment, null,
            "Help text for the field. It can contain ",
            React.createElement(__1.Link, { href: "" }, "links to documentation"),
            " or",
            " ",
            React.createElement(__1.Code, null, "code-anotations"),
            ". Also, ",
            React.createElement(__1.Text, { type: "strong" }, "bold text"),
            " for emphasis.") },
        React.createElement(__1.TextInput, { type: "text", placeholder: "Enter something" })))); });
react_1.storiesOf("Form", module).add("form field + error", function () { return (React.createElement(story_helpers_1.Example, { title: "form field + error" },
    React.createElement(__1.Form.Field, { label: "Field title", error: "Everything is broken." },
        React.createElement(__1.TextInput, { type: "text", placeholder: "Enter something", hasError: true })))); });
react_1.storiesOf("Form", module).add("form field + help text + error", function () { return (React.createElement(story_helpers_1.Example, { title: "form field + help text + error" },
    React.createElement(__1.Form.Field, { label: "Field title", helpText: "The help text for the field provide the user with instructions of how to correctly fill this field.", error: "Everything is broken." },
        React.createElement(__1.TextInput, { type: "text", placeholder: "Enter something", hasError: true })))); });
react_1.storiesOf("Form", module).add("all the fields", function () { return (React.createElement(story_helpers_1.Example, { title: "all the fields" },
    React.createElement(__1.RowLayout, { gutter: "small" },
        React.createElement(__1.Form, null,
            React.createElement(__1.Form.Field, { label: "Something" },
                React.createElement(__1.TextInput, { type: "text", placeholder: "Enter something", actions: [{ icon: "copy", handler: function () { }, label: "Copy to clipboard" }] })),
            React.createElement(__1.Form.Field, { label: "Long input", helpText: "How tall are you?", error: "Show only in the first field" },
                React.createElement(__1.TextArea, { hasError: true, id: "custom-id", placeholder: "Add a lot of text here" })),
            React.createElement(__1.Form.Field, { label: "Options list" },
                React.createElement(__1.Select, { options: [
                        { text: "First option", value: "1", defaultSelected: true },
                        { text: "Second option", value: "2" },
                        { text: "Third option", value: "3" },
                        { text: "Fourth option", value: "4" }
                    ] })),
            React.createElement(__1.Form.Field, { label: "Subscribe" },
                React.createElement(__1.Switch, { on: true })),
            React.createElement(__1.Form.Field, { label: "Agree" },
                React.createElement(__1.Radio, { name: "example1", selected: "one", onChange: function (_) { } },
                    React.createElement(__1.Radio.Option, { value: "one" }, "One"),
                    React.createElement(__1.Radio.Option, { value: "two" }, "Two"))),
            React.createElement(__1.Form.Field, { label: "Framework" },
                React.createElement(__1.Checkbox.Group, { name: "example1", selected: ["one", "two"] },
                    React.createElement(__1.Checkbox, { name: "one", value: "one" }, "Option 1"),
                    React.createElement(__1.Checkbox, { name: "two", value: "two" }, "Option 2"))),
            React.createElement(__1.Form.Field, { label: "Custom field" },
                React.createElement(__1.TextInput, { placeholder: "Value", type: "date", hasError: true })),
            React.createElement(__1.Form.Field, { label: "Height", helpText: "How tall are you?", error: "Show only in the first field" },
                React.createElement(__1.StackLayout, { gutter: "xsmall" },
                    React.createElement(__1.TextInput, { placeholder: "Value", hasError: true }),
                    React.createElement(__1.Select, { options: [{ text: "centimetres", value: "cm" }, { text: "inches", value: "in" }] }),
                    React.createElement(__1.Button, { appearance: "link", icon: "copy", label: "Copy value", onClick: function (e) { return console.log(e); } }))),
            React.createElement(__1.Form.Actions, { primaryAction: { label: "Save Changes", handler: function () { } } })),
        React.createElement(__1.Form, { layout: "label-on-top" },
            React.createElement(__1.Form.Field, { label: "Something" },
                React.createElement(__1.TextInput, { type: "text", placeholder: "Enter something", actions: [{ icon: "copy", handler: function () { }, label: "Copy to clipboard" }] })),
            React.createElement(__1.Form.Field, { label: "Long input", helpText: "How tall are you?", error: "Show only in the first field" },
                React.createElement(__1.TextArea, { hasError: true, placeholder: "Add a lot of text here" })),
            React.createElement(__1.Form.Field, { label: "Options list" },
                React.createElement(__1.Select, { options: [
                        { text: "First option", value: "1", defaultSelected: true },
                        { text: "Second option", value: "2" },
                        { text: "Third option", value: "3" },
                        { text: "Fourth option", value: "4" }
                    ] })),
            React.createElement(__1.Form.Field, { label: "Subscribe" },
                React.createElement(__1.Switch, { on: true })),
            React.createElement(__1.Form.Field, { label: "Agree" },
                React.createElement(__1.Radio, { name: "example1", selected: "one", onChange: function (_) { } },
                    React.createElement(__1.Radio.Option, { value: "one" }, "One"),
                    React.createElement(__1.Radio.Option, { value: "two" }, "Two"))),
            React.createElement(__1.Form.Field, { label: "Framework" },
                React.createElement(__1.Checkbox.Group, { name: "example1", selected: ["one", "two"] },
                    React.createElement(__1.Checkbox, { name: "one", value: "one" }, "Option 1"),
                    React.createElement(__1.Checkbox, { name: "two", value: "two" }, "Option 2"))),
            React.createElement(__1.Form.Field, { label: "Custom field" },
                React.createElement(__1.TextInput, { placeholder: "Value", type: "date", hasError: true })),
            React.createElement(__1.Form.Field, { label: "Height", helpText: "How tall are you?", error: "Show only in the first field" },
                React.createElement(__1.StackLayout, { gutter: "xsmall" },
                    React.createElement(__1.TextInput, { placeholder: "Value", hasError: true }),
                    React.createElement(__1.Select, { options: [{ text: "centimetres", value: "cm" }, { text: "inches", value: "in" }] }),
                    React.createElement(__1.Button, { appearance: "link", icon: "copy", label: "Copy value", onClick: function (e) { return console.log(e); } }))),
            React.createElement(__1.Form.Actions, { primaryAction: { label: "Save Changes", handler: function () { } } }))))); });
react_1.storiesOf("Form", module).add("Form full width", function () { return (React.createElement(story_helpers_1.Example, { title: "Form full width" },
    React.createElement(__1.RowLayout, { gutter: "small" },
        React.createElement(__1.Form, { fullWidth: true },
            React.createElement(__1.Form.Field, { label: "Something" },
                React.createElement(__1.TextInput, { type: "text", placeholder: "Enter something", actions: [{ icon: "copy", handler: function () { }, label: "Copy to clipboard" }] })),
            React.createElement(__1.Form.Field, { label: "Long input", helpText: "How tall are you?", error: "Show only in the first field" },
                React.createElement(__1.TextArea, { placeholder: "Add a lot of text here" })),
            React.createElement(__1.Form.Field, { label: "Options list" },
                React.createElement(__1.Select, { options: [
                        { text: "First option", value: "1", defaultSelected: true },
                        { text: "Second option", value: "2" },
                        { text: "Third option", value: "3" },
                        { text: "Fourth option", value: "4" }
                    ] })),
            React.createElement(__1.Form.Field, { label: "Subscribe" },
                React.createElement(__1.Switch, { on: true })),
            React.createElement(__1.Form.Field, { label: "Agree" },
                React.createElement(__1.Radio, { name: "example1", selected: "one", onChange: function (_) { } },
                    React.createElement(__1.Radio.Option, { value: "one" }, "One"),
                    React.createElement(__1.Radio.Option, { value: "two" }, "Two"))),
            React.createElement(__1.Form.Field, { label: "Framework" },
                React.createElement(__1.Checkbox.Group, { name: "example1", selected: ["one", "two"] },
                    React.createElement(__1.Checkbox, { name: "one", value: "one" }, "Option 1"),
                    React.createElement(__1.Checkbox, { name: "two", value: "two" }, "Option 2"))),
            React.createElement(__1.Form.Field, { label: "Custom field" },
                React.createElement(__1.TextInput, { placeholder: "Value", type: "date", hasError: true })),
            React.createElement(__1.Form.Field, { label: "Height", helpText: "How tall are you?", error: "Show only in the first field" },
                React.createElement(__1.StackLayout, { gutter: "xsmall" },
                    React.createElement(__1.TextInput, { placeholder: "Value", hasError: true }),
                    React.createElement(__1.Select, { options: [{ text: "centimetres", value: "cm" }, { text: "inches", value: "in" }] }),
                    React.createElement(__1.Button, { appearance: "link", icon: "copy", label: "Copy value", onClick: function (e) { return console.log(e); } }))),
            React.createElement(__1.Form.Actions, { primaryAction: { label: "Save Changes", handler: function () { } } })),
        React.createElement(__1.Form, { layout: "label-on-top", fullWidth: true },
            React.createElement(__1.Form.Field, { label: "Something" },
                React.createElement(__1.TextInput, { type: "text", placeholder: "Enter something", actions: [{ icon: "copy", handler: function () { }, label: "Copy to clipboard" }] })),
            React.createElement(__1.Form.Field, { hasError: true, label: "Long input", helpText: "How tall are you?", error: "Show only in the first field" },
                React.createElement(__1.TextArea, { placeholder: "Add a lot of text here" })),
            React.createElement(__1.Form.Field, { label: "Options list" },
                React.createElement(__1.Select, { options: [
                        { text: "First option", value: "1", defaultSelected: true },
                        { text: "Second option", value: "2" },
                        { text: "Third option", value: "3" },
                        { text: "Fourth option", value: "4" }
                    ] })),
            React.createElement(__1.Form.Field, { label: "Subscribe" },
                React.createElement(__1.Switch, { on: true })),
            React.createElement(__1.Form.Field, { label: "Agree" },
                React.createElement(__1.Radio, { name: "example1", selected: "one", onChange: function (_) { } },
                    React.createElement(__1.Radio.Option, { value: "one" }, "One"),
                    React.createElement(__1.Radio.Option, { value: "two" }, "Two"))),
            React.createElement(__1.Form.Field, { label: "Framework" },
                React.createElement(__1.Checkbox.Group, { name: "example1", selected: ["one", "two"] },
                    React.createElement(__1.Checkbox, { name: "one", value: "one" }, "Option 1"),
                    React.createElement(__1.Checkbox, { name: "two", value: "two" }, "Option 2"))),
            React.createElement(__1.Form.Field, { label: "Custom field" },
                React.createElement(__1.TextInput, { placeholder: "Value", type: "date", hasError: true })),
            React.createElement(__1.Form.Field, { label: "Height", helpText: "How tall are you?", error: "Show only in the first field" },
                React.createElement(__1.StackLayout, { gutter: "xsmall" },
                    React.createElement(__1.TextInput, { placeholder: "Value", hasError: true }),
                    React.createElement(__1.Select, { options: [{ text: "centimetres", value: "cm" }, { text: "inches", value: "in" }] }),
                    React.createElement(__1.Button, { appearance: "link", icon: "copy", label: "Copy value", onClick: function (e) { return console.log(e); } }))),
            React.createElement(__1.Form.Actions, { primaryAction: { label: "Save Changes", handler: function () { } } }))))); });
react_1.storiesOf("Form", module).add("Form Fields with null children", function () { return (React.createElement(story_helpers_1.Example, { title: "Form Fields with null children" },
    React.createElement(__1.RowLayout, { gutter: "small" },
        React.createElement(__1.Form, null,
            React.createElement(__1.Form.Field, { label: "Something" },
                React.createElement(__1.TextInput, { type: "text", placeholder: "Enter something", actions: [{ icon: "copy", handler: function () { }, label: "Copy to clipboard" }] }),
                null),
            React.createElement(__1.Form.Actions, { primaryAction: { label: "Save Changes", handler: function () { } } }))))); });
//# sourceMappingURL=field.story.js.map