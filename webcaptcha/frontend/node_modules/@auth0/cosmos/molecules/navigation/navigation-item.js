"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(require("react"));
var styled_1 = __importDefault(require("../../styled"));
var automation_attribute_1 = __importDefault(require("../../_helpers/automation-attribute"));
var tokens_1 = require("../../tokens");
var icon_1 = __importDefault(require("../../atoms/icon"));
var label_1 = __importDefault(require("../../atoms/label"));
var navigation_subnav_1 = __importDefault(require("./navigation-subnav"));
var children_mover_1 = require("../../_helpers/children-mover");
var ariaCurrent = function (props) { return (props.selected ? { 'aria-current': 'page' } : {}); };
var _a = children_mover_1.childrenMover(navigation_subnav_1.default), includeSubnav = _a.include, excludeSubnav = _a.exclude;
var enforceSingleChildren = function (children) {
    if (!children) {
        return null;
    }
    if (children.constructor.name === 'Array') {
        return children[0] || null;
    }
    return children;
};
var findSelectedSubItem = function (subMenu) {
    var found = false;
    React.Children.forEach(subMenu.props.children, function (link) {
        if (link && link.props.selected) {
            found = true;
        }
    });
    return found;
};
var processIcon = function (children, selected, inSubMenu) {
    return React.Children.map(children, function (child) {
        if (child && child.type === icon_1.default) {
            return React.cloneElement(child, {
                size: 18,
                color: selected
                    ? tokens_1.colors.icon.sidebarFocus
                    : inSubMenu
                        ? tokens_1.colors.text.subtle
                        : tokens_1.colors.icon.sidebar
            });
        }
        return child;
    });
};
var NavigationItem = (function (_super) {
    __extends(NavigationItem, _super);
    function NavigationItem(props) {
        var _this = _super.call(this, props) || this;
        _this.state = { subMenuOpen: props.defaultOpen || _this.isSelected };
        _this.toggleSubmenu = _this.toggleSubmenu.bind(_this);
        return _this;
    }
    Object.defineProperty(NavigationItem.prototype, "isSelected", {
        get: function () {
            var _a = this.props, selected = _a.selected, children = _a.children;
            var subMenu = enforceSingleChildren(includeSubnav(children));
            return selected || (subMenu ? findSelectedSubItem(subMenu) : false);
        },
        enumerable: true,
        configurable: true
    });
    NavigationItem.prototype.toggleSubmenu = function () {
        this.setState({ subMenuOpen: !this.state.subMenuOpen });
    };
    NavigationItem.prototype.setSubMenuState = function (subMenu, state) {
        if (!subMenu) {
            return null;
        }
        return React.cloneElement(subMenu, state);
    };
    NavigationItem.prototype.render = function () {
        var props = this.props;
        var inSubMenu = props.inSubMenu, children = props.children;
        var _a = __read([
            excludeSubnav(children),
            enforceSingleChildren(includeSubnav(children))
        ], 2), navigationItem = _a[0], subMenu = _a[1];
        var selected = this.props.defaultOpen || this.isSelected;
        var statefulSubMenu = this.setSubMenuState(subMenu, { open: this.state.subMenuOpen });
        return (React.createElement(NavigationItem.Item, null,
            React.createElement(NavigationItem.Element, __assign({ href: props.url, target: props.target, onClick: subMenu ? this.toggleSubmenu : props.onClick, selected: selected, "aria-expanded": props.open, id: props.id }, ariaCurrent(props), automation_attribute_1.default('navigation.link')), processIcon(navigationItem, selected, inSubMenu)),
            statefulSubMenu));
    };
    NavigationItem.Item = styled_1.default.li(templateObject_1 || (templateObject_1 = __makeTemplateObject([""], [""])));
    NavigationItem.Text = styled_1.default.div(templateObject_2 || (templateObject_2 = __makeTemplateObject([""], [""])));
    NavigationItem.Element = styled_1.default.a(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n    display: flex;\n    align-items: flex-start;\n    cursor: pointer;\n    color: ", ";\n    font-size: 13px;\n    text-decoration: none;\n    word-break: break-word;\n    padding-top: ", ";\n    padding-bottom: ", ";\n    &:hover\u00A0 {\n      color: ", ";\n      ", " path {\n        fill: ", ";\n      }\n    }\n    ", " {\n      margin-right: ", ";\n      margin-top: 1px;\n    }\n    ", " {\n      /* should we add a new appearance to the label? */\n      color: ", ";\n      border-color: ", ";\n    }\n  "], ["\n    display: flex;\n    align-items: flex-start;\n    cursor: pointer;\n    color: ", ";\n    font-size: 13px;\n    text-decoration: none;\n    word-break: break-word;\n    padding-top: ", ";\n    padding-bottom: ", ";\n    &:hover\u00A0 {\n      color: ", ";\n      ", " path {\n        fill: ", ";\n      }\n    }\n    ", " {\n      margin-right: ", ";\n      margin-top: 1px;\n    }\n    ", " {\n      /* should we add a new appearance to the label? */\n      color: ", ";\n      border-color: ", ";\n    }\n  "])), function (props) { return (props.selected ? tokens_1.colors.link.sidebarFocus : tokens_1.colors.link.sidebar); }, tokens_1.spacing.xsmall, tokens_1.spacing.xsmall, tokens_1.colors.link.sidebarHover, icon_1.default.Element, tokens_1.colors.link.sidebarHover, icon_1.default.Element, tokens_1.spacing.xsmall, label_1.default.Element, tokens_1.colors.link.sidebarHover, tokens_1.colors.link.sidebarHover);
    NavigationItem.Postfix = styled_1.default.div(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n    margin-left: ", ";\n  "], ["\n    margin-left: ", ";\n  "])), tokens_1.spacing.xsmall);
    return NavigationItem;
}(React.Component));
exports.default = NavigationItem;
var templateObject_1, templateObject_2, templateObject_3, templateObject_4;
//# sourceMappingURL=navigation-item.js.map