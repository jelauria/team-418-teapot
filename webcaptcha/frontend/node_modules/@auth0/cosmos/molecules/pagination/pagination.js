"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(require("react"));
var automation_attribute_1 = __importDefault(require("../../_helpers/automation-attribute"));
var pagination_1 = require("../../_helpers/pagination");
var button_1 = __importDefault(require("../../atoms/button"));
var icon_1 = __importDefault(require("../../atoms/icon"));
var styled_1 = __importDefault(require("../../styled"));
var tokens_1 = require("../../tokens");
var renderPaginationItem = function (_a) {
    var toPage = _a.toPage, content = _a.content, appearance = _a.appearance, items = _a.items, perPage = _a.perPage, onPageChanged = _a.onPageChanged, _b = _a.right, right = _b === void 0 ? false : _b;
    return (React.createElement(button_1.default, { icon: "chevron-" + (right ? 'right' : 'left'), iconAlign: right ? 'right' : 'left', appearance: appearance, size: "compressed", onClick: function () {
            return pagination_1.changePageIfAppropiate({ rawNextPage: toPage, total: items, perPage: perPage, onPageChanged: onPageChanged });
        }, "aria-label": right ? 'Next page' : 'Previous page' }, content));
};
var handlePaginationButtonClick = function (page, items, perPage, onPageChanged) {
    if (page.clickable === false) {
        return;
    }
    return pagination_1.changePageIfAppropiate({ rawNextPage: page.label, total: items, perPage: perPage, onPageChanged: onPageChanged });
};
var Pagination = function (_a) {
    var page = _a.page, perPage = _a.perPage, items = _a.items, appearance = _a.appearance, onPageChanged = _a.onPageChanged, props = __rest(_a, ["page", "perPage", "items", "appearance", "onPageChanged"]);
    return (React.createElement(Pagination.Element, __assign({}, automation_attribute_1.default('pagination'), props),
        renderPaginationItem({
            toPage: 1,
            content: 'First',
            appearance: appearance,
            items: items,
            perPage: perPage,
            onPageChanged: onPageChanged
        }),
        React.createElement(Pagination.IconOnlyButton, { size: "compressed", onClick: function () {
                return pagination_1.changePageIfAppropiate({ rawNextPage: page - 1, total: items, perPage: perPage, onPageChanged: onPageChanged });
            }, icon: "chevron-left" }),
        pagination_1.getPaginationSlice(page, items, perPage).map(function (page) { return (React.createElement(Pagination.PageButton, { key: page.label, appearance: appearance, selected: page.selected, size: "compressed", onClick: function () { return handlePaginationButtonClick(page, items, perPage, onPageChanged); } }, page.label)); }),
        React.createElement(Pagination.IconOnlyButton, { size: "compressed", onClick: function () {
                return pagination_1.changePageIfAppropiate({ rawNextPage: page + 1, total: items, perPage: perPage, onPageChanged: onPageChanged });
            }, icon: "chevron-right" }),
        renderPaginationItem({
            toPage: pagination_1.pagesFromItems(items, perPage),
            content: 'Last',
            appearance: appearance,
            items: items,
            perPage: perPage,
            onPageChanged: onPageChanged,
            right: true
        })));
};
Pagination.Element = styled_1.default.div(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  display: flex;\n  justify-content: center;\n\n  ", " {\n    margin-right: ", ";\n  }\n"], ["\n  display: flex;\n  justify-content: center;\n\n  ", " {\n    margin-right: ", ";\n  }\n"])), button_1.default.Element, tokens_1.spacing.small);
Pagination.IconOnlyButton = styled_1.default(button_1.default)(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  /* Override icon-only button color */\n  /* See: https://github.com/auth0/cosmos/pull/1033 */\n  ", " {\n    path {\n      fill: black;\n    }\n  }\n"], ["\n  /* Override icon-only button color */\n  /* See: https://github.com/auth0/cosmos/pull/1033 */\n  ", " {\n    path {\n      fill: black;\n    }\n  }\n"])), icon_1.default.Element);
Pagination.PageButton = styled_1.default(button_1.default)(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n  background-color: ", ";\n\n  &:hover {\n    background-color: ", ";\n  }\n"], ["\n  background-color: ",
    ";\n\n  &:hover {\n    background-color: ", ";\n  }\n"])), function (props) {
    return props.selected ? tokens_1.colors.button.default.backgroundActive : tokens_1.colors.button.default.background;
}, tokens_1.colors.button.default.backgroundActive);
exports.default = Pagination;
var templateObject_1, templateObject_2, templateObject_3;
//# sourceMappingURL=pagination.js.map