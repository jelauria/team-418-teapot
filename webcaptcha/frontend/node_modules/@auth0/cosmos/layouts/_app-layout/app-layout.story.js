"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(require("react"));
var react_1 = require("@storybook/react");
var story_helpers_1 = require("../../_helpers/story-helpers");
var automation_attribute_1 = __importDefault(require("../../_helpers/automation-attribute"));
var __1 = require("../../");
react_1.storiesOf('App Layout', module).add('default', function () { return (React.createElement(story_helpers_1.Example, { title: "default" },
    React.createElement(__1.AppLayout, null,
        React.createElement(__1.AppLayout.Header, __assign({}, automation_attribute_1.default('app-frame.header'), { role: "banner" }),
            React.createElement("div", null, "Header")),
        React.createElement(__1.AppLayout.SideBar, __assign({}, automation_attribute_1.default('app-frame.sidebar')),
            React.createElement("nav", null, "ConThere are some key differences with how a grid layout works over the grid systems you may have used previously. As you can see, we do not need to add any markup to create a row, grid systems need to do this to stop elethings into rows, with no danger of them rising up into the row above if it is left empty. Due to this strict column and row placement we can also easily leave white sp")),
        React.createElement(__1.AppLayout.Content, __assign({}, automation_attribute_1.default('app-frame.content'), { role: "main" }), "ConThere are some key differences with how a grid layout works over the grid systems you may have used previously. As you can see, we do not need to add any markup to create a row, grid systems need to do this to stop elethings into rows, with no danger of them rising up into the row above if it is left empty. Due to this strict column and row placement we can also easily leave white space in our layout. We also don\u2019t need special classes to pull or push things, to indent them into the grid. All we need to do is specify the start and end line for the item.tentConThere are some key differences with how a grid layout works over the grid systems you may hav into the grid. All we need to do is specify the start and end line for the item.tentConThere are some key differences with how a grid layout works over the grid systems you may have used previously. As you can see, we do not need to add any markup to create a row, grid systems need to do this to stop elethings into rows, with no danger of them rising up into the row above if it is left empty. Due to this strict column and row placement we can also easily leave white space in our layout. We also don\u2019t need special classes to pull or push things, to indent them into the grid. All we need to do is specify the start and end line for the item.tentConThere are some key differences with how a grid layout works over the grid systems you may have used previously. As you can see, we do not need to add any markup to create a row, grid systems need to do this to stop elethings into rows, with no danger of them rising up into the row above if it is left empty. Due to this strict column and row placement we can also easily leave white space in our layout. We also don\u2019t need special classes to pull or push things, to indent them into the grid. All we need to do is specify the start and end line for the item.tentConThere are some key differences with how a grid layout works over the grid systems you may have used previously. As you can see, we do not need to add any markup to create a row, grid systems need to do this to stop elethings into rows, with no danger of them rising up in into the grid. All we need to do is specify the start and end line for the item.tentConThere are some key differences with how a grid layout works over the grid systems you may have used previously. As you can see, we do not need to add any markup to create a row, grid systems need to do this to stop elethings into rows, with no danger of them rising up into the row above if it is left empty. Due to this strict column and row placement we can also easily leave white space in our layout. We also don\u2019t need special classes to pull or push things, to indent them into the grid. All we need to do is specify the start and end line for the item.tentConThere are some key differences with how a grid layout works over the grid systems you may have used previously. As you can see, we do not need to add any markup to create a row, grid systems need to do this to stop elethings into rows, with no danger of them rising up into the row above if it is left empty. Due to this strict column and row placement we can also easily leave white space in our layout. We also don\u2019t need special classes to pull or push things, to indent them into the grid. All we need to do is specify the start and end line for the item.tentConThere are some key differences with how a grid layout works over the grid systems you may have used previously. As you can see, we do not need to add any markup to create a row, grid systems need to do this to stop elethings into rows, with no danger of them rising up in into the grid. All we need to do is specify the start and end line for the item.tentConThere are some key differences with how a grid layout works over the grid systems you may have used previously. As you can see, we do not need to add any markup to create a row, grid systems need to do this to stop elethings into rows, with no danger of them rising up into the row above if it is left empty. Due to this strict column and row placement we can also easily leave white space in our layout. We also don\u2019t need special classes to pull or push things, to indent them into the grid. All we need to do is specify the start and end line for the item.tentConThere are some key differences with how a grid layout works over the grid systems you may have used previously. As you can see, we do not need to add any markup to create a row, grid systems need to do this to stop elethings into rows, with no danger of them rising up into the row above if it is left empty. Due to this strict column and row placement we can also easily leave white space in our layout. We also don\u2019t need special classes to pull or push things, to indent them into the grid. All we need to do is specify the start and end line for the item.tentConThere are some key differences with how a grid layout works over the grid systems you may have used previously. As you can see, we do not need to add any markup to create a row, grid systems need to do this to stop elethings into rows, with no danger of them rising up in into the grid. All we need to do is specify the start and end line for the item.tentConThere are some key differences with how a grid layout works over the grid systems you may have used previously. As you can see, we do not need to add any markup to create a row, grid systems need to do this to stop elethings into rows, with no danger of them rising up into the row above if it is left empty. Due to this strict column and row placement we can also easily leave white space in our layout. We also don\u2019t need special classes to pull or push things, to indent them into the grid. All we need to do is specify the start and end line for the item.tentConThere are some key differences with how a grid layout works over the grid systems you may have used previously. As you can see, we do not need to add any markup to create a row, grid systems need to do this to stop elethings into rows, with no danger of them rising up into the row above if it is left empty. Due to this strict column and row placement we can also easily leave white space in our layout. We also don\u2019t need special classes to pull or push things, to indent them into the grid. All we need to do is specify the start and end line for the item.tentConThere are some key differences with how a grid layout works over the grid systems you may have used previously. As you can see, we do not need to add any markup to create a row, grid systems need to do this to stop elethings into rows, with no danger of them rising up ine used previously. As you can see, we do not need to add any markup to create a row, grid systems need to do this to stop elethings into rows, with no danger of them rising up into the row above if it is left empty. Due to this strict column and row placement we can also easily leave white space in our layout. We also don\u2019t need special classes to pull or push things, to indent them into the grid. All we need to do is specify the start and end line for the item.tentConThere are some key differences with how a grid layout works over the grid systems you may have used previously. As you can see, we do not need to add any markup to create a row, grid systems need to do this to stop elethings into rows, with no danger of them rising up into the row above if it is left empty. Due to this strict column and row placement we can also easily leave white space in our layout. We also don\u2019t need special classes to pull or push things, to indent them into the grid. All we need to do is specify the start and end line for the item.tentConThere are some key differences with how a grid layout works over the grid systems you may have used previously. As you can see, we do not need to add any markup to create a row, grid systems need to do this to stop elethings into rows, with no danger of them rising up into the row above if it is left empty. Due to this strict column and row placement we can also easily leave white space in our layout. We also don\u2019t need special classes to pull or push things, to indent them into the grid. All we need to do is specify the start and end line for the item.tentConThere are some key differences with how a grid layout works over the grid systems you may have used previously. As you can see, we do not need to add any markup to create a row, grid systems need to do this to stop elethings into rows, with no danger of them rising up into the row above if it is left empty. Due to this strict column and row placement we can also easily leave white space in our layout. We also don\u2019t need special classes to pull or push things, to indent them into the grid. All we need to do is specify the start and end line for the item.tentConThere are some key differences with how a grid layout works over the grid systems you may have used previously. As you can see, we do not need to add any markup to create a row, grid systems need to do this to stop elethings into rows, with no danger of them rising up into the row above if it is left empty. Due to this strict column and row placement we can also easily leave white space in our layout. We also don\u2019t need special classes to pull or push things, to indent them into the grid. All we need to do is specify the start and end line for the item.tentConThere are some key differences with how a grid layout works over the grid systems you may have used previously. As you can see, we do not need to add any markup to create a row, grid systems need to do this to stop elethings into rows, with no danger of them rising up into the row above if it is left empty. Due to this strict column and row placement we can also easily leave white space in our layout. We also don\u2019t need special classes to pull or push things, to indent them into the grid. All we need to do is specify the start and end line for the item.tentConThere are some key differences with how a grid layout works over the grid systems you may have used previously. As you can see, we do not need to add any markup to create a row, grid systems need to do this to stop elethings into rows, with no danger of them rising up into the row above if it is left empty. Due to this strict column and row placement we can also easily leave white space in our layout. We also don\u2019t need special classes to pull or push things, to indent them into the grid. All we need to do is specify the start and end line for the item.tent")))); });
//# sourceMappingURL=app-layout.story.js.map