"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var _this = this;
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(require("react"));
var automation_attribute_1 = __importDefault(require("../../_helpers/automation-attribute"));
var layout_margin_reset_1 = __importDefault(require("../../_helpers/layout-margin-reset"));
var transform_layout_children_1 = __importDefault(require("../../_helpers/transform-layout-children"));
var styled_1 = __importDefault(require("../../styled"));
var tokens_1 = require("../../tokens");
var gutterOptions = {
    none: 0,
    xsmall: tokens_1.spacing.xsmall,
    small: tokens_1.spacing.small,
    medium: tokens_1.spacing.medium,
    large: tokens_1.spacing.xlarge
};
var alignmentOptions = {
    center: 'center',
    end: 'flex-end',
    start: 'flex-start'
};
var distributionOptions = {
    spaceBetween: 'space-between',
    center: 'center',
    start: 'flex-start',
    end: 'flex-end'
};
var resolveSpace = function (props, child, index) {
    if (!child) {
        return null;
    }
    if (!props.space) {
        return child;
    }
    return React.cloneElement(child, { space: props.space[index] });
};
var StackLayout = function (props) { return (React.createElement(StackLayout.Element, __assign({}, props, automation_attribute_1.default('stack-layout')), React.Children.map(transform_layout_children_1.default(props, StackLayout.Item, 'stack-layout.item'), resolveSpace.bind(_this, props)))); };
StackLayout.Element = styled_1.default.div(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  display: flex;\n  align-items: ", ";\n  justify-content: ", ";\n\n  flex-wrap: ", ";\n  > *:not(:last-child) {\n    margin-right: ", ";\n  }\n\n  & > *:empty {\n    display: none;\n  }\n\n  ", ";\n"], ["\n  display: flex;\n  align-items: ", ";\n  justify-content: ", ";\n\n  flex-wrap: ", ";\n  > *:not(:last-child) {\n    margin-right: ", ";\n  }\n\n  & > *:empty {\n    display: none;\n  }\n\n  ", ";\n"])), function (props) { return alignmentOptions[props.alignment]; }, function (props) { return distributionOptions[props.distribution]; }, function (props) { return (props.wrap ? 'nowrap' : 'wrap'); }, function (props) { return gutterOptions[props.gutter]; }, layout_margin_reset_1.default());
StackLayout.Item = styled_1.default.div(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  flex: ", ";\n\n  /* Avoids any component to be larger than it's parent */\n  max-width: 100%;\n"], ["\n  flex: ", ";\n\n  /* Avoids any component to be larger than it's parent */\n  max-width: 100%;\n"])), function (props) { return props.space; });
function spaceItemProp(props, propName) {
    var throwError = function () {
        return new Error('Space value must be a number between 1 and 10 or "none"');
    };
    var value = props[propName];
    if (typeof value === 'number' && value < 1 && value > 10) {
        return throwError();
    }
    if (typeof value === 'string' && value !== 'none') {
        return throwError();
    }
    return undefined;
}
StackLayout.defaultProps = {
    gutter: 'medium',
    alignment: 'center',
    distribution: 'start'
};
exports.default = StackLayout;
var templateObject_1, templateObject_2;
//# sourceMappingURL=stack-layout.js.map