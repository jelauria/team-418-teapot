"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(require("react"));
var react_1 = require("@storybook/react");
var story_helpers_1 = require("../../_helpers/story-helpers");
var __1 = require("../../");
react_1.storiesOf('TextInput', module).add('simple', function () { return (React.createElement(story_helpers_1.Example, { title: "simple" },
    React.createElement(__1.TextInput, { type: "text", placeholder: "Enter some text" }))); });
react_1.storiesOf('TextInput', module).add('default value', function () { return (React.createElement(story_helpers_1.Example, { title: "default value" },
    React.createElement(__1.TextInput, { type: "text", defaultValue: "This is plain text field value" }))); });
react_1.storiesOf('TextInput', module).add('password', function () { return (React.createElement(story_helpers_1.Example, { title: "password" },
    React.createElement(__1.TextInput, { type: "password", defaultValue: "password" }))); });
react_1.storiesOf('TextInput', module).add('code', function () { return (React.createElement(story_helpers_1.Example, { title: "password" },
    React.createElement(__1.TextInput, { code: true, defaultValue: "DUq0xuJZAD7RvezvqCrA6hpJVb6iDUip" }))); });
react_1.storiesOf('TextInput', module).add('readonly', function () { return (React.createElement(story_helpers_1.Example, { title: "password" },
    React.createElement(__1.TextInput, { readOnly: true, placeholder: "Placeholder text" }),
    React.createElement("br", null),
    React.createElement("br", null),
    React.createElement(__1.TextInput, { readOnly: true, defaultValue: "Default value" }))); });
react_1.storiesOf('TextInput', module).add('masked', function () { return (React.createElement(story_helpers_1.Example, { title: "masked" },
    React.createElement(__1.TextInput, { defaultValue: "secret-client-hash", masked: true }))); });
react_1.storiesOf('TextInput', module).add('sizes', function () { return (React.createElement(story_helpers_1.Example, { title: "sizes" },
    React.createElement(story_helpers_1.Stack, { style: { marginBottom: '1em' } },
        React.createElement(__1.TextInput, { size: "large", defaultValue: "Size large" }),
        React.createElement(__1.Button, { size: "large", appearance: "primary" }, "Button")),
    React.createElement(story_helpers_1.Stack, { style: { marginBottom: '1em' } },
        React.createElement(__1.TextInput, { label: "This field has text", defaultValue: "Size normal" }),
        React.createElement(__1.Button, { appearance: "primary" }, "Button")),
    React.createElement(story_helpers_1.Stack, { style: { marginBottom: '1em' } },
        React.createElement(__1.TextInput, { size: "compressed", defaultValue: "Size compressed" }),
        React.createElement(__1.Button, { size: "compressed", appearance: "primary" }, "Button")),
    React.createElement(story_helpers_1.Stack, { style: { marginBottom: '1em' } },
        React.createElement(__1.TextInput, { size: "small", defaultValue: "Size small" }),
        React.createElement(__1.Button, { size: "small", appearance: "primary" }, "Button")))); });
react_1.storiesOf('TextInput', module).add('with actions as shape', function () { return (React.createElement(story_helpers_1.Example, { title: "with actions as shape" },
    React.createElement(__1.TextInput, { type: "text", placeholder: "Enter some text", actions: [
            { icon: 'copy', label: 'Copy URL', handler: function (e) { return console.log(e); } },
            { icon: 'delete', label: 'Delete URL', handler: function (e) { return console.log(e); } }
        ] }))); });
var sampleAsyncAction = function (event) { return new Promise(function (resolve) { return setTimeout(resolve, 900); }); };
var sampleAsyncFailingAction = function (event) { return new Promise(function (_, reject) { return setTimeout(reject, 900); }); };
react_1.storiesOf('TextInput', module).add('with actions as buttons', function () { return (React.createElement(story_helpers_1.Example, { title: "with actions as buttons" },
    React.createElement(__1.TextInput, { type: "text", placeholder: "Enter some text", actions: [
            React.createElement(__1.Tooltip.Action, { content: {
                    default: 'Copy',
                    loading: 'Copying...',
                    success: 'Copied!',
                    error: 'Could not copy'
                } },
                React.createElement(__1.Button, { icon: "copy", onClick: function (e) { return console.log(e); } })),
            React.createElement(__1.Tooltip.Action, { content: {
                    default: 'Do work',
                    loading: 'Working...',
                    success: 'Done!',
                    error: 'Could not work'
                } },
                React.createElement(__1.Button, { icon: "wrench", onClick: sampleAsyncAction })),
            React.createElement(__1.Tooltip.Action, { content: {
                    default: 'Do work',
                    loading: 'Working...',
                    success: 'Done!',
                    error: 'Could not work'
                } },
                React.createElement(__1.Button, { icon: "reload", onClick: sampleAsyncFailingAction })),
            React.createElement(__1.Button, { icon: "delete", onClick: function (e) { return console.log(e); } })
        ] }))); });
var InteractiveExample = (function (_super) {
    __extends(InteractiveExample, _super);
    function InteractiveExample(props) {
        var _this = _super.call(this, props) || this;
        _this.state = { working: false };
        return _this;
    }
    InteractiveExample.prototype.exampleAsyncTask = function () {
        var _this = this;
        this.setState({ working: true });
        return new Promise(function (resolve) {
            return setTimeout(function () {
                resolve();
                _this.setState({ working: false });
            }, 1500);
        });
    };
    InteractiveExample.prototype.render = function () {
        return (React.createElement(__1.TextInput, { type: "text", placeholder: "Enter some text", actions: [
                React.createElement(__1.Tooltip.Action, { content: {
                        default: 'Do work',
                        loading: 'Working...',
                        success: 'Done!',
                        error: 'Could not work'
                    } },
                    React.createElement(__1.Button, { disabled: this.state.working, loading: this.state.working, icon: "wrench", onClick: this.exampleAsyncTask.bind(this) }))
            ] }));
    };
    return InteractiveExample;
}(React.Component));
react_1.storiesOf('TextInput', module).add('interactive example', function () { return (React.createElement(story_helpers_1.Example, { title: "with actions as buttons" },
    React.createElement(InteractiveExample, null))); });
//# sourceMappingURL=text-input.story.js.map