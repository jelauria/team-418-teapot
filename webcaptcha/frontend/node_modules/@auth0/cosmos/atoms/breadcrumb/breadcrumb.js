"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(require("react"));
var styled_1 = __importDefault(require("../../styled"));
var automation_attribute_1 = __importDefault(require("../../_helpers/automation-attribute"));
var tokens_1 = require("../../tokens");
var container_styles_1 = __importDefault(require("../../_helpers/container-styles"));
var icon_1 = __importDefault(require("../icon"));
var link_1 = __importDefault(require("../link"));
var Separator = styled_1.default(icon_1.default)(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  margin: 0 ", ";\n"], ["\n  margin: 0 ", ";\n"])), tokens_1.spacing.small);
var LinkIcon = styled_1.default(icon_1.default)(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  margin-right: ", ";\n"], ["\n  margin-right: ", ";\n"])), tokens_1.spacing.xsmall);
var Breadcrumb = function (props) { return (React.createElement(Breadcrumb.Element, __assign({ "aria-label": "Breadcrumb" }, automation_attribute_1.default('breadcrumb'), props))); };
Breadcrumb.Element = styled_1.default.nav(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n  ", ";\n\n  /* overrides for link */\n  ", " {\n    color: ", ";\n    font-size: 13px;\n    font-weight: ", ";\n    &:hover {\n      cursor: pointer;\n      color: ", ";\n      ", " path {\n        fill: ", ";\n      }\n    }\n  }\n\n  /* last link should be inactive: */\n  ", ":last-child {\n    color: ", ";\n    cursor: default;\n  }\n\n  /* sometimes there's just one link = first = last, let's override that */\n  ", ":first-child {\n    color: ", ";\n    cursor: pointer;\n    &:hover {\n      color: ", ";\n    }\n  }\n\n  /* fix alignment with text for all icons (including separator) */\n  ", ", ", " {\n    position: relative;\n    top: -2px;\n  }\n\n  ", ":last-child ", " {\n    display: none;\n  }\n  ", " {\n    top: -2px;\n  }\n  ", " {\n    top: -1px;\n  }\n\n  ", ":last-child ", " {\n    display: none;\n  }\n"], ["\n  ", ";\n\n  /* overrides for link */\n  ", " {\n    color: ", ";\n    font-size: 13px;\n    font-weight: ", ";\n    &:hover {\n      cursor: pointer;\n      color: ", ";\n      ", " path {\n        fill: ", ";\n      }\n    }\n  }\n\n  /* last link should be inactive: */\n  ", ":last-child {\n    color: ", ";\n    cursor: default;\n  }\n\n  /* sometimes there's just one link = first = last, let's override that */\n  ", ":first-child {\n    color: ", ";\n    cursor: pointer;\n    &:hover {\n      color: ", ";\n    }\n  }\n\n  /* fix alignment with text for all icons (including separator) */\n  ", ", ", " {\n    position: relative;\n    top: -2px;\n  }\n\n  ", ":last-child ", " {\n    display: none;\n  }\n  ", " {\n    top: -2px;\n  }\n  ", " {\n    top: -1px;\n  }\n\n  ", ":last-child ", " {\n    display: none;\n  }\n"])), container_styles_1.default, link_1.default.Element, tokens_1.colors.base.grayDarkest, tokens_1.fonts.weight.medium, tokens_1.colors.link.default, LinkIcon, tokens_1.colors.link.default, link_1.default.Element, tokens_1.colors.base.default, link_1.default.Element, tokens_1.colors.base.grayDarkest, tokens_1.colors.link.default, LinkIcon, Separator, link_1.default.Element, Separator, LinkIcon, Separator, link_1.default.Element, Separator);
Breadcrumb.Link = function (props) { return (React.createElement(link_1.default, __assign({}, automation_attribute_1.default('breadcrumb.link'), props),
    props.icon && React.createElement(LinkIcon, { name: props.icon, size: 12, color: "grayDarkest" }),
    props.children,
    React.createElement(Separator, { "aria-hidden": true, name: "chevron-right-fill", size: 12, color: "grayMedium" }))); };
exports.default = Breadcrumb;
var templateObject_1, templateObject_2, templateObject_3;
//# sourceMappingURL=breadcrumb.js.map