import * as React from "react";
export interface IButtonAppearance {
    text: string;
    icon: string;
    background: string;
    border: string;
    hoverBackground: string;
    hoverBorder: string;
    hoverText?: string;
    focusBackground: string;
    focusBorder: string;
    focusText?: string;
    activeBackground?: string;
    activeBorder?: string;
    loadingInverse?: boolean;
}
export interface IButtonAppearanceSet {
    default: IButtonAppearance;
    primary: IButtonAppearance;
    secondary: IButtonAppearance;
    cta: IButtonAppearance;
    destructive: IButtonAppearance;
    link: IButtonAppearance;
}
export declare type ButtonSize = "default" | "large" | "small" | "compressed";
export declare type ButtonAppearance = "default" | "primary" | "secondary" | "cta" | "link" | "destructive";
export declare type ButtonIconAlign = "left" | "right";
export declare type ButtonTarget = "_blank" | "_self" | "_parent" | "_top";
export declare type ButtonType = "submit" | "button" | "reset";
export interface IButtonProps {
    id?: string;
    className?: string;
    size?: ButtonSize;
    appearance?: ButtonAppearance;
    icon?: string;
    iconAlign?: ButtonIconAlign;
    label?: string;
    href?: string;
    target?: ButtonTarget;
    rel?: string;
    disabled?: boolean;
    loading?: boolean;
    success?: boolean;
    type?: ButtonType;
    onClick?: Function;
    children?: React.ReactNode;
    labelDefaultVisible?: boolean;
}
declare const Button: {
    ({ children, ...props }: IButtonProps): JSX.Element;
    Element: any;
    Text: any;
    LinkElement: any;
    defaultProps: {
        size: string;
        appearance: string;
        icon: any;
        iconAlign: string;
        disabled: boolean;
        loading: boolean;
        success: boolean;
    };
};
export default Button;
