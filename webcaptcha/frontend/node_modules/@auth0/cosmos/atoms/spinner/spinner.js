"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(require("react"));
var styled_1 = __importStar(require("../../styled"));
var logo_1 = __importDefault(require("../logo"));
var default_prop_change_1 = __importDefault(require("../../_helpers/default-prop-change"));
var automation_attribute_1 = __importDefault(require("../../_helpers/automation-attribute"));
var rotate = styled_1.keyframes(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  0% { transform: rotate(0deg) }\n  100% { transform: rotate(1turn) }\n"], ["\n  0% { transform: rotate(0deg) }\n  100% { transform: rotate(1turn) }\n"])));
var getColor = function (props, highlight) {
    if (highlight === void 0) { highlight = null; }
    var color = '0, 0, 0';
    var opacity = highlight ? 0.4 : 0.08;
    if (props.inverse) {
        color = '255, 255, 255';
        opacity = highlight ? 0.85 : 0.2;
    }
    return "rgba(" + color + ", " + opacity + ")";
};
var spinners = {
    small: {
        logo: null,
        width: 14
    },
    medium: {
        logo: 'tiny',
        width: 40
    },
    large: {
        logo: 'small',
        width: 60
    }
};
var spinnerWithLogo = function (variant, props) {
    var iconColor = props.inverse ? 'light' : 'dark';
    return (React.createElement(Spinner.Container, { variant: variant },
        React.createElement(Spinner.Element, __assign({}, automation_attribute_1.default('spinner'), props, { width: variant.width })),
        React.createElement(logo_1.default, { size: variant.logo, color: iconColor })));
};
var Spinner = function (props) {
    default_prop_change_1.default(Spinner, 'size', props.size, 'medium', '1.0.0');
    var variant = spinners[props.size];
    return variant.logo ? (spinnerWithLogo(variant, props)) : (React.createElement(Spinner.Element, __assign({}, automation_attribute_1.default('spinner'), props, { width: variant.width })));
};
Spinner.Element = styled_1.default.span(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  display: inline-block;\n  border-top: 2px solid ", ";\n  border-right: 2px solid ", ";\n  border-bottom: 2px solid ", ";\n  border-left: 2px solid ", ";\n  border-radius: 50%;\n  vertical-align: text-bottom;\n  width: ", "px;\n  height: ", "px;\n  animation: ", " 0.8s infinite linear;\n"], ["\n  display: inline-block;\n  border-top: 2px solid ", ";\n  border-right: 2px solid ", ";\n  border-bottom: 2px solid ", ";\n  border-left: 2px solid ", ";\n  border-radius: 50%;\n  vertical-align: text-bottom;\n  width: ", "px;\n  height: ", "px;\n  animation: ", " 0.8s infinite linear;\n"])), function (props) { return getColor(props); }, function (props) { return getColor(props); }, function (props) { return getColor(props); }, function (props) { return getColor(props, true); }, function (props) { return props.width; }, function (props) { return props.width; }, rotate);
Spinner.Container = styled_1.default.div(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n  position: relative;\n  width: ", "px;\n  height: ", "px;\n\n  ", " {\n    position: absolute;\n    top: 52%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }\n"], ["\n  position: relative;\n  width: ", "px;\n  height: ", "px;\n\n  ", " {\n    position: absolute;\n    top: 52%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }\n"])), function (p) { return p.variant.width; }, function (p) { return p.variant.width; }, logo_1.default.Element);
Spinner.defaultProps = {
    inverse: false,
    size: 'small'
};
var StyledSpinner = Spinner.Element;
exports.StyledSpinner = StyledSpinner;
exports.default = Spinner;
var templateObject_1, templateObject_2, templateObject_3;
//# sourceMappingURL=spinner.js.map