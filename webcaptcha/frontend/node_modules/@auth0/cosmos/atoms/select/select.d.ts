import * as React from "react";
import { ISelectOptions } from "./interfaces";
export interface ISelectProps {
    id?: string;
    name?: string;
    options?: ISelectOptions;
    value?: any;
    defaultValue?: any;
    hasError?: boolean;
    onChange?: Function;
    onFocus?: Function;
    onBlur?: Function;
    placeholder?: string;
    async?: boolean;
    disabled?: boolean;
    searchable?: boolean;
    multiple?: boolean;
    loading?: boolean;
    customOptionRenderer?: Function;
    customValueRenderer?: Function;
    loadOptions?: Function;
    getOptionValue?: (option: any) => any;
    noOptionsMessage?: Function | string;
    defaultOptions?: Object[] | boolean;
    style?: Object;
    autoFocus?: boolean;
    cacheOptions?: boolean;
    defaultMenuOpen?: boolean;
    inputValue?: string;
}
interface ISelectState {
    menuIsOpen: boolean;
}
declare class Select extends React.Component<ISelectProps, ISelectState> {
    static Wrapper: any;
    static defaultProps: {
        options: any[];
        placeholder: string;
        searchable: boolean;
    };
    componentOverrides: {
        SingleValue: any;
        MultiValue: (optionProps: any) => JSX.Element;
        DropdownIndicator: ({ innerProps }: {
            innerProps: any;
        }) => JSX.Element;
        LoadingIndicator: {
            (): JSX.Element;
            Element: any;
        };
        ClearIndicator: (props: any) => JSX.Element;
        GroupHeading: {
            (props: any): JSX.Element;
            Element: any;
            theme(provided: any): any;
        };
        Menu: {
            (props: any): JSX.Element;
            Element: any;
            theme(provided: any): any;
            portalTheme(provided: any): any;
        };
        MenuList: {
            (props: any): JSX.Element;
            Element: any;
            theme(provided: any): any;
        };
        Option: (optionProps: any) => JSX.Element;
        Group: {
            (props: any): JSX.Element;
            Element: any;
            theme(provided: any): any;
        };
        IndicatorSeparator: () => any;
    };
    constructor(props: any);
    componentDidMount(): void;
    componentWillUnmount(): void;
    handleScroll(): void;
    updateMenuState(newState: any): () => void;
    render(): JSX.Element;
}
export default Select;
