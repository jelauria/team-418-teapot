import * as React from "react";
export declare type OverlaySize = "small" | "medium" | "large";
export declare const overlayContentSizes: {
    small: string;
    medium: string;
    large: string;
};
export interface IOverlayProps {
    closeOnBackdropClick?: boolean;
    closeOnEscape?: boolean;
    open?: boolean;
    onClose?: Function;
    contentSize?: number | OverlaySize;
}
interface IOverlayState {
    hasBeenMounted: boolean;
}
declare class Overlay extends React.Component<IOverlayProps, IOverlayState> {
    static defaultProps: {
        closeOnBackdropClick: boolean;
        closeOnEscape: boolean;
        open: boolean;
    };
    static Backdrop: any;
    static Element: any;
    static getSizeForOverlay(propValue: any): any;
    mountElement: HTMLDivElement;
    contentElementRef: React.RefObject<HTMLDivElement>;
    constructor(props: any);
    componentDidMount(): void;
    componentWillUnmount(): void;
    handleMouseDown: (evt: any) => void;
    handleDocumentKeyDown: (evt: any) => void;
    render(): React.ReactPortal;
}
export default Overlay;
