"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(require("react"));
var automation_attribute_1 = __importDefault(require("../../_helpers/automation-attribute"));
var form_1 = __importDefault(require("../../molecules/form"));
var styled_1 = __importDefault(require("../../styled"));
var _input_with_actions_1 = __importDefault(require("../_input-with-actions"));
var _styled_input_1 = require("../_styled-input");
var TextArea = function (props) {
    var Input = (React.createElement(form_1.default.Field.ContextConsumer, null, function (context) { return (React.createElement(TextArea.Element, __assign({ rows: props.length, id: props.id || context.formFieldId }, props, automation_attribute_1.default("text-area")))); }));
    if (!props.actions.length) {
        return Input;
    }
    else {
        return React.createElement(_input_with_actions_1.default, { actions: props.actions }, Input);
    }
};
TextArea.Element = styled_1.default(_styled_input_1.StyledInput).attrs({ as: "textarea" })(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  resize: ", ";\n  font-size: ", ";\n  display: block;\n"], ["\n  resize: ", ";\n  font-size: ", ";\n  display: block;\n"])), function (props) { return (props.resizable ? "vertical" : "none"); }, function (props) { return (props.code ? "13px" : "inherit"); });
exports.StyledTextArea = TextArea.Element;
TextArea.defaultProps = {
    length: 3,
    readOnly: false,
    code: false,
    error: null,
    resizable: true,
    onChange: null,
    actions: []
};
exports.default = TextArea;
var templateObject_1;
//# sourceMappingURL=textarea.js.map