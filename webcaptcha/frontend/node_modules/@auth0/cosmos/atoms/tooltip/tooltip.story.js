"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(require("react"));
var react_1 = require("@storybook/react");
var story_helpers_1 = require("../../_helpers/story-helpers");
var styled_1 = __importDefault(require("../../styled"));
var __1 = require("../../");
var positions = ['top', 'left', 'right', 'bottom'];
var WithDialogExample = styled_1.default(story_helpers_1.Example)(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  min-height: 800px;\n"], ["\n  min-height: 800px;\n"])));
var ExampleContainer = function (_a) {
    var children = _a.children, position = _a.position, noMargins = _a.noMargins;
    var Container = styled_1.default.div(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n    margin-top: 20px;\n    min-height: 80px;\n\n    p {\n      font-family: monospace;\n      margin-bottom: ", ";\n      opacity: 0.5;\n    }\n\n    & > div {\n      margin-left: ", ";\n    }\n  "], ["\n    margin-top: 20px;\n    min-height: 80px;\n\n    p {\n      font-family: monospace;\n      margin-bottom: ", ";\n      opacity: 0.5;\n    }\n\n    & > div {\n      margin-left: ", ";\n    }\n  "])), position === 'top' && !noMargins ? '50px' : '10px', position === 'left' && !noMargins ? '120px' : 0);
    return (React.createElement(Container, null,
        React.createElement("p", null, position),
        React.createElement("div", null, children)));
};
react_1.storiesOf('Tooltip', module).add('hidden by default', function () { return (React.createElement(story_helpers_1.Example, { title: "hidden by default" },
    React.createElement(__1.Tooltip, { content: "Can you see me?" },
        React.createElement(__1.Button, null, "Button")))); });
react_1.storiesOf('Tooltip', module).add('with button', function () { return (React.createElement(story_helpers_1.Example, { title: "with button" }, positions.map(function (position) { return (React.createElement(ExampleContainer, { position: position, key: position },
    React.createElement(__1.Tooltip, { position: position, content: "Inner content " + position, defaultVisible: true },
        React.createElement(__1.Button, null, "Something")))); }))); });
react_1.storiesOf('Tooltip', module).add('with button group', function () { return (React.createElement(story_helpers_1.Example, { title: "with button group" }, positions.map(function (position) { return (React.createElement(ExampleContainer, { position: position, noMargins: true },
    React.createElement(__1.ButtonGroup, null,
        React.createElement(__1.Button, null, "Something"),
        React.createElement(__1.Tooltip, { position: position, content: "Inner content " + position, defaultVisible: true },
            React.createElement(__1.Button, null, "Something")),
        React.createElement(__1.Button, null, "Something")))); }))); });
react_1.storiesOf('Tooltip', module).add('with compressed button group', function () { return (React.createElement(story_helpers_1.Example, { title: "with compressed button group" }, positions.map(function (position) { return (React.createElement(ExampleContainer, { position: position, noMargins: true },
    React.createElement(__1.ButtonGroup, { compressed: true },
        React.createElement(__1.Button, null, "Something"),
        React.createElement(__1.Tooltip, { position: position, content: "Inner content " + position, defaultVisible: true },
            React.createElement(__1.Button, null, "Something")),
        React.createElement(__1.Button, null, "Something")))); }))); });
react_1.storiesOf('Tooltip', module).add('with icon only button', function () { return (React.createElement(story_helpers_1.Example, { title: "with icon only button" },
    React.createElement(ExampleContainer, { position: "top" },
        React.createElement(__1.Button, { icon: "analytics", label: "this is the label", labelDefaultVisible: true })))); });
react_1.storiesOf('Tooltip', module).add('long text', function () { return (React.createElement(story_helpers_1.Example, { title: "with long text" },
    React.createElement(ExampleContainer, { position: "top" },
        React.createElement(__1.Button, { icon: "help", label: "This is a very long text. Please try to keep it no longer than 4 lines. The tooltip should be a short and helpful text.", labelDefaultVisible: true })))); });
react_1.storiesOf('Tooltip', module).add('in a small container', function () { return (React.createElement(story_helpers_1.Example, { title: "in a small container (#951)" },
    React.createElement("div", { style: { overflow: 'hidden', padding: 20, border: '1px solid black' } },
        React.createElement(__1.Tooltip, { content: "here is some text" }, "Hover over me")))); });
react_1.storiesOf('Tooltip', module).add('inside a dialog', function () { return (React.createElement(WithDialogExample, { title: "inside a dialog (#1367)" },
    React.createElement(__1.Dialog, { open: true, title: "Test case for #1367" },
        React.createElement("div", null,
            "plenty of room for the tooltip",
            ' ',
            React.createElement(__1.Tooltip, { content: "I have enough space", position: "right", defaultVisible: true },
                React.createElement(__1.Icon, { name: "help", size: "15", color: "default" }))),
        React.createElement("br", null),
        React.createElement("br", null),
        React.createElement("div", null,
            "just a lot of text which leaves no room for the tooltip inside the dialog",
            ' ',
            React.createElement(__1.Tooltip, { position: "right", content: "no worries, I can float on top of the dialog", defaultVisible: true },
                React.createElement(__1.Icon, { name: "help", size: "15", color: "default" }))),
        React.createElement("br", null),
        React.createElement("br", null),
        React.createElement("div", null,
            "if you resize the window, the tooltip will not have any space outside the dialog as well",
            React.createElement(__1.Tooltip, { position: "right", content: "I would open on the left when there's no space left on the right", defaultVisible: true },
                React.createElement(__1.Icon, { name: "help", size: "15", color: "default" })))))); });
react_1.storiesOf('Tooltip', module).add('input actions inside dialog', function () { return (React.createElement(WithDialogExample, { title: "input actions inside dialog" },
    React.createElement(__1.Dialog, { open: true, title: "Test case for #1501" },
        React.createElement(__1.Form, { layout: "label-on-top" },
            React.createElement(__1.Form.Field, { label: "Name", helpText: "If you are triggering a login manually, this is the identifier you would use on the connection parameter." },
                React.createElement(__1.TextInput, { defaultValue: "Facebook", readOnly: true })),
            React.createElement(__1.Form.Field, { label: "App ID", helpText: React.createElement(__1.Link, null, "How to obtain a App ID?") },
                React.createElement(__1.TextInput, { placeholder: "Leave blank to use Auth0 dev keys" })),
            React.createElement(__1.Form.Field, { label: "App Secret" },
                React.createElement(__1.TextInput, { defaultValue: "1234", type: "password", readOnly: true, actions: [
                        React.createElement(__1.Button, { icon: "copy", label: "Copy to Clipboard", onClick: function (e) { return console.log(e); } }),
                        React.createElement(__1.Button, { icon: "delete", label: "This is an intentionally long label", onClick: function (e) { return console.log(e); }, labelDefaultVisible: true })
                    ] })))))); });
react_1.storiesOf('Tooltip', module).add('with an input', function () { return (React.createElement(story_helpers_1.Example, { title: "with an input" },
    React.createElement(__1.Tooltip, { id: "input-tip", content: "Here's some help", position: "bottom" },
        React.createElement(__1.TextInput, { placeholder: "Enter something" })))); });
var templateObject_1, templateObject_2;
//# sourceMappingURL=tooltip.story.js.map