{"ast":null,"code":"\"use strict\";\n\nvar __makeTemplateObject = this && this.__makeTemplateObject || function (cooked, raw) {\n  if (Object.defineProperty) {\n    Object.defineProperty(cooked, \"raw\", {\n      value: raw\n    });\n  } else {\n    cooked.raw = raw;\n  }\n\n  return cooked;\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = __importStar(require(\"react\"));\n\nvar styled_1 = __importDefault(require(\"../styled\"));\n\nvar paragraph_1 = __importDefault(require(\"../atoms/paragraph\"));\n\nvar StyledText = styled_1.default(paragraph_1.default)(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n  margin: 0;\\n\"], [\"\\n  margin: 0;\\n\"])));\n\nvar useStyledTextIfAppropiate = function (children, useParagraph) {\n  var Wrapper = useParagraph ? StyledText : React.Fragment;\n  return React.createElement(Wrapper, null, children);\n};\n\nvar FreeText = function (_a) {\n  var text = _a.text,\n      children = _a.children,\n      _b = _a.useParagraph,\n      useParagraph = _b === void 0 ? false : _b;\n\n  if (children) {\n    return useStyledTextIfAppropiate(children, useParagraph);\n  }\n\n  if (typeof text === 'string') {\n    return useStyledTextIfAppropiate(text, useParagraph);\n  }\n\n  if (text) {\n    return React.createElement(React.Fragment, null, text);\n  }\n\n  return null;\n};\n\nexports.default = FreeText;\nvar templateObject_1;","map":{"version":3,"sources":["../../../../_helpers/free-text.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,KAAA,GAAA,YAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,QAAA,GAAA,eAAA,CAAA,OAAA,CAAA,WAAA,CAAA,CAAA;;AACA,IAAA,WAAA,GAAA,eAAA,CAAA,OAAA,CAAA,oBAAA,CAAA,CAAA;;AAEA,IAAM,UAAU,GAAG,QAAA,CAAA,OAAA,CAAO,WAAA,CAAA,OAAP,EAAiB,gBAAA,KAAA,gBAAA,GAAA,oBAAA,CAAA,CAAA,kBAAA,CAAA,EAAA,CAAA,kBAAA,CAAA,CAAA,CAAjB,CAAnB;;AAIA,IAAM,yBAAyB,GAAG,UAAC,QAAD,EAAqC,YAArC,EAA0D;AAC1F,MAAM,OAAO,GAAG,YAAY,GAAG,UAAH,GAAgB,KAAK,CAAC,QAAlD;AACA,SAAO,KAAA,CAAA,aAAA,CAAC,OAAD,EAAQ,IAAR,EAAU,QAAV,CAAP;AACD,CAHD;;AAeA,IAAM,QAAQ,GAAG,UAAC,EAAD,EAAyD;MAAtD,IAAA,GAAA,EAAA,CAAA,I;MAAM,QAAA,GAAA,EAAA,CAAA,Q;MAAU,EAAA,GAAA,EAAA,CAAA,Y;MAAA,YAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,GAAA,E;;AAClC,MAAI,QAAJ,EAAc;AACZ,WAAO,yBAAyB,CAAC,QAAD,EAAW,YAAX,CAAhC;AACD;;AAED,MAAI,OAAO,IAAP,KAAgB,QAApB,EAA8B;AAC5B,WAAO,yBAAyB,CAAC,IAAD,EAAO,YAAP,CAAhC;AACD;;AAED,MAAI,IAAJ,EAAU;AAAE,WAAO,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EAAG,IAAH,CAAP;AAAoB;;AAEhC,SAAO,IAAP;AACD,CAZD;;AAcA,OAAA,CAAA,OAAA,GAAe,QAAf","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n    return cooked;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = __importStar(require(\"react\"));\nvar styled_1 = __importDefault(require(\"../styled\"));\nvar paragraph_1 = __importDefault(require(\"../atoms/paragraph\"));\nvar StyledText = styled_1.default(paragraph_1.default)(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n  margin: 0;\\n\"], [\"\\n  margin: 0;\\n\"])));\nvar useStyledTextIfAppropiate = function (children, useParagraph) {\n    var Wrapper = useParagraph ? StyledText : React.Fragment;\n    return React.createElement(Wrapper, null, children);\n};\nvar FreeText = function (_a) {\n    var text = _a.text, children = _a.children, _b = _a.useParagraph, useParagraph = _b === void 0 ? false : _b;\n    if (children) {\n        return useStyledTextIfAppropiate(children, useParagraph);\n    }\n    if (typeof text === 'string') {\n        return useStyledTextIfAppropiate(text, useParagraph);\n    }\n    if (text) {\n        return React.createElement(React.Fragment, null, text);\n    }\n    return null;\n};\nexports.default = FreeText;\nvar templateObject_1;\n//# sourceMappingURL=free-text.js.map"]},"metadata":{},"sourceType":"script"}