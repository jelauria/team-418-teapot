{"ast":null,"code":"\"use strict\";\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = __importStar(require(\"react\"));\n\nexports.excludeDrawer = function (child, type) {\n  var newChildren = React.Children.map(child.props.children, function (child) {\n    if (!child || child.type === type) {\n      return null;\n    }\n\n    return child;\n  });\n  return React.cloneElement(child, {\n    children: newChildren\n  });\n};\n\nexports.getDrawer = function (child, drawerIsOpen, type) {\n  var drawer = React.Children.map(child.props.children, function (child) {\n    if (!child || child.type !== type) {\n      return null;\n    }\n\n    var props = child.props;\n    return React.cloneElement(child, {\n      hidden: !drawerIsOpen,\n      'aria-label': props.description\n    });\n  });\n  return drawer;\n};\n\nexports.isListExpandable = function (child, type) {\n  var isPresent = false;\n  var arrowIsVisible = true;\n  React.Children.map(child.props.children, function (item) {\n    if (item && item.type === type) {\n      isPresent = true;\n\n      if (item.props.hidden) {\n        arrowIsVisible = false;\n      }\n    }\n  });\n  return [isPresent, arrowIsVisible];\n};\n\nexports.onItemClickHandler = function (props, child) {\n  if (!props.onItemClick) {\n    return undefined;\n  }\n\n  return function (ev) {\n    return props.onItemClick(ev, child.props);\n  };\n};","map":{"version":3,"sources":["../../../../_helpers/list.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,IAAA,KAAA,GAAA,YAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AAOa,OAAA,CAAA,aAAA,GAAgB,UAAC,KAAD,EAAQ,IAAR,EAAY;AACvC,MAAM,WAAW,GAAG,KAAK,CAAC,QAAN,CAAe,GAAf,CAAmB,KAAK,CAAC,KAAN,CAAY,QAA/B,EAAyC,UAAC,KAAD,EAAM;AACjE,QAAI,CAAC,KAAD,IAAU,KAAK,CAAC,IAAN,KAAe,IAA7B,EAAmC;AAAE,aAAO,IAAP;AAAa;;AAElD,WAAO,KAAP;AACD,GAJmB,CAApB;AAMA,SAAO,KAAK,CAAC,YAAN,CAAmB,KAAnB,EAA0B;AAAE,IAAA,QAAQ,EAAE;AAAZ,GAA1B,CAAP;AACD,CARY;;AAeA,OAAA,CAAA,SAAA,GAAY,UAAC,KAAD,EAAQ,YAAR,EAAsB,IAAtB,EAA0B;AACjD,MAAM,MAAM,GAAG,KAAK,CAAC,QAAN,CAAe,GAAf,CAAmB,KAAK,CAAC,KAAN,CAAY,QAA/B,EAAyC,UAAC,KAAD,EAAM;AAC5D,QAAI,CAAC,KAAD,IAAU,KAAK,CAAC,IAAN,KAAe,IAA7B,EAAmC;AAAE,aAAO,IAAP;AAAa;;AAE1C,QAAA,KAAA,GAAA,KAAA,CAAA,KAAA;AAER,WAAO,KAAK,CAAC,YAAN,CAAmB,KAAnB,EAA0B;AAAE,MAAA,MAAM,EAAE,CAAC,YAAX;AAAyB,oBAAc,KAAK,CAAC;AAA7C,KAA1B,CAAP;AACD,GANc,CAAf;AASA,SAAO,MAAP;AACD,CAXY;;AAkBA,OAAA,CAAA,gBAAA,GAAmB,UAAC,KAAD,EAAQ,IAAR,EAAY;AAC1C,MAAI,SAAS,GAAG,KAAhB;AACA,MAAI,cAAc,GAAG,IAArB;AAEA,EAAA,KAAK,CAAC,QAAN,CAAe,GAAf,CAAmB,KAAK,CAAC,KAAN,CAAY,QAA/B,EAAyC,UAAC,IAAD,EAAK;AAC5C,QAAI,IAAI,IAAI,IAAI,CAAC,IAAL,KAAc,IAA1B,EAAgC;AAC9B,MAAA,SAAS,GAAG,IAAZ;;AAEA,UAAI,IAAI,CAAC,KAAL,CAAW,MAAf,EAAuB;AACrB,QAAA,cAAc,GAAG,KAAjB;AACD;AACF;AACF,GARD;AAUA,SAAO,CAAC,SAAD,EAAY,cAAZ,CAAP;AACD,CAfY;;AAiBA,OAAA,CAAA,kBAAA,GAAqB,UAAC,KAAD,EAAQ,KAAR,EAAa;AAC7C,MAAI,CAAC,KAAK,CAAC,WAAX,EAAwB;AAAE,WAAO,SAAP;AAAkB;;AAE5C,SAAO,UAAC,EAAD,EAAG;AAAK,WAAA,KAAK,CAAC,WAAN,CAAkB,EAAlB,EAAsB,KAAK,CAA3B,KAAA,CAAA;AAAkC,GAAjD;AACD,CAJY","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = __importStar(require(\"react\"));\nexports.excludeDrawer = function (child, type) {\n    var newChildren = React.Children.map(child.props.children, function (child) {\n        if (!child || child.type === type) {\n            return null;\n        }\n        return child;\n    });\n    return React.cloneElement(child, { children: newChildren });\n};\nexports.getDrawer = function (child, drawerIsOpen, type) {\n    var drawer = React.Children.map(child.props.children, function (child) {\n        if (!child || child.type !== type) {\n            return null;\n        }\n        var props = child.props;\n        return React.cloneElement(child, { hidden: !drawerIsOpen, 'aria-label': props.description });\n    });\n    return drawer;\n};\nexports.isListExpandable = function (child, type) {\n    var isPresent = false;\n    var arrowIsVisible = true;\n    React.Children.map(child.props.children, function (item) {\n        if (item && item.type === type) {\n            isPresent = true;\n            if (item.props.hidden) {\n                arrowIsVisible = false;\n            }\n        }\n    });\n    return [isPresent, arrowIsVisible];\n};\nexports.onItemClickHandler = function (props, child) {\n    if (!props.onItemClick) {\n        return undefined;\n    }\n    return function (ev) { return props.onItemClick(ev, child.props); };\n};\n//# sourceMappingURL=list.js.map"]},"metadata":{},"sourceType":"script"}